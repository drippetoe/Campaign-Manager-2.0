#!/usr/bin/env python

import sys, os

if len(sys.argv) != 4:
    print ("Usage: %s <major> <minor> <build>" % sys.argv[0])
    raise SystemExit
major = sys.argv[1]
minor = sys.argv[2]
build = sys.argv[3]

BASEDIR = os.path.realpath("/home/proximus/client/")
LIB_DIR = BASEDIR + os.sep + "lib"
sys.path.insert(0, LIB_DIR)
sys.path.insert(0, BASEDIR)

from proximus.config.ClientURISettings import ClientURISettings

from proximus.tools.SystemWriter import SystemWriter
from proximus.tools.XMLUtils import XMLUtils
from proximus.tools.ProcessExecutor import ProcessExecutor
from proximus.data.config.ClientConfig import ClientConfig

if not os.path.exists(ClientURISettings.CONFIG_FILE):
     print("No config file to update, is this a new install?   Creating default config.")
     clientConfig = ClientConfig(None)

xmlContent = SystemWriter.readFileToString(ClientURISettings.CONFIG_FILE)
configNode = XMLUtils.stringToElement(xmlContent)
# {'kernel': '2.6.35.7', 'major': '2', 'license': 'unlicensed', 'build': 5, 'minor': '0'}
software = configNode.find("software")

try:
    kernel = ProcessExecutor.executeCommand("/usr/bin/uname -r")[0]
except:
    kernel = "unknown"

software.attrib['major'] = major
software.attrib['minor'] = minor
software.attrib['build'] = build
software.attrib['kernel'] = kernel
XMLUtils.writeNodeToFile(ClientURISettings.CONFIG_FILE, configNode)
